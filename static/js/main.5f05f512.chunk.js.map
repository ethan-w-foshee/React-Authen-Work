{"version":3,"sources":["components/Navigation.js","components/Home.js","components/About.js","components/Car.js","components/Login.js","Router.js","App.js","index.js"],"names":["Navigation","navigate","useNavigate","AppBar","position","Toolbar","IconButton","color","Typography","variant","style","flexGrow","className","to","onClick","document","cookie","serialize","maxAge","Home","console","log","cars","map","car","idx","Card","key","CardContent","Name","toUpperCase","Divider","CardActions","id","About","state","checked","heading","toggleSwitch","newVal","setState","Container","maxWidth","textAlign","this","href","target","rel","Switch","onChange","Component","Car","props","useParams","find","c","Number","Paper","Object","keys","Chip","label","Login","useState","username","password","handleTextChange","e","name","value","prevState","onSubmit","preventDefault","TextField","required","type","Button","ProtectedRoute","component","rest","parse","Router","path","element","App","createRoot","getElementById","render"],"mappings":"iTA0CeA,MApCf,WACE,IAAMC,EAAWC,cAEjB,OACE,kBAACC,EAAA,EAAD,CAAQC,SAAS,YACf,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,MAAM,WAChB,kBAAC,IAAD,OAEF,kBAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,MAAO,CAAEC,SAAU,MAA5C,gBAGA,wBAAIC,UAAU,YACZ,wBAAIA,UAAU,iBACZ,kBAAC,IAAD,CAAMC,GAAG,KAAT,SAEF,wBAAID,UAAU,iBACZ,kBAAC,IAAD,CAAMC,GAAG,UAAT,UAEF,wBACED,UAAU,gBACVE,QAAS,WACPC,SAASC,OAASA,IAAOC,UAAU,WAAY,KAAM,CACnDC,OAAQ,IAEVjB,EAAS,YANb,c,oDCKKkB,MAzBf,WAEI,OADAC,QAAQC,IAAI,OAAQC,GAEhB,yBAAKV,UAAU,kBACVU,EAAKC,IAAI,SAACC,EAAKC,GAAN,OACN,kBAACC,EAAA,EAAD,CAAMC,IAAKF,EAAKb,UAAU,QACtB,kBAACgB,EAAA,EAAD,CAAahB,UAAU,aACnB,8BAAOY,EAAIK,KAAKC,eAChB,4BACA,iDAAuBN,EAAG,kBAC1B,0CAAgBA,EAAG,WACnB,6CAAmBA,EAAG,cACtB,2CAAiBA,EAAG,cAGxB,kBAACO,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAatB,MAAO,CAAEH,MAAO,eACzB,kBAAC,IAAD,CAAMM,GAAE,eAAUW,EAAIS,KAAtB,0B,0DCyCTC,E,2MA3DbC,MAAQ,CACNC,SAAS,EACTC,QAAS,sB,EAGXC,aAAe,WACb,IAAMC,GAAU,EAAKJ,MAAMC,QAC3B,OAAIG,EACK,EAAKC,SAAS,CACnBH,QAAS,qBACTD,QAASG,IAGN,EAAKC,SAAS,CACnBH,QAAS,iBACTD,QAASG,K,wEAKX,OACE,yBAAK3B,UAAU,aACb,kBAAC6B,EAAA,EAAD,CAAWC,SAAS,MAClB,wBAAIhC,MAAO,CAAEiC,UAAW,WAAaC,KAAKT,MAAME,SAChD,4QAKE,uBACE3B,MAAO,CAAEH,MAAO,cAChBsC,KAAK,uBACLC,OAAO,SACPC,IAAI,uBAJN,YALF,qSAmBA,kBAAChB,EAAA,EAAD,MACA,+JAIA,kBAACiB,EAAA,EAAD,CACEZ,QAASQ,KAAKT,MAAMC,QACpB7B,MAAM,UACN0C,SAAUL,KAAKN,qB,GApDPY,a,kBCkBLC,MAhBf,SAAaC,GACX,IAAMnB,EAAKoB,cAAYpB,GACjBT,EAAMF,EAAKgC,KAAK,SAACC,GAAD,OAAOA,EAAEtB,KAAOuB,OAAOvB,KAE7C,OACE,kBAACQ,EAAA,EAAD,CAAWC,SAAS,KAAK9B,UAAU,iBACjC,kBAAC6C,EAAA,EAAD,CAAO7C,UAAU,aACf,4BAAKY,EAAIK,MACR6B,OAAOC,KAAKnC,GAAKD,IAAI,SAACI,EAAKF,GAC1B,OAAO,kBAACmC,EAAA,EAAD,CAAMjC,IAAKF,EAAKoC,MAAK,UAAKlC,EAAL,aAAaH,EAAIG,W,6PCoDxCmC,MA7Df,WACE,IAAM7D,EAAWC,cADF,EAGW6D,mBAAS,CACjCC,SAAU,GACVC,SAAU,KALG,mBAGR9B,EAHQ,KAGDK,EAHC,KAQf,SAAS0B,EAAiBC,GAAI,IAAD,EACHA,EAAErB,OAAlBsB,EADmB,EACnBA,KAAMC,EADa,EACbA,MACd7B,EAAS,SAAC8B,GACR,O,qVAAO,CAAP,GACKA,EADL,eAEGF,EAAOC,MAcd,OACE,yBAAKzD,UAAU,OACb,kBAAC6B,EAAA,EAAD,CAAWC,SAAS,MAClB,0BAAM9B,UAAU,aAAa2D,SAZnC,SAAeJ,GACbA,EAAEK,iBAGFzD,SAASC,OAASA,IAAOC,UAAU,WAAY,OAAQ,CAACC,OAAQ,KAEhEjB,EAAS,OAOH,kBAACwE,EAAA,EAAD,CACEC,UAAQ,EACRzB,SAAUiB,EACVG,MAAOlC,EAAM6B,SACbI,KAAK,WACLP,MAAM,WACNc,KAAK,SAEP,kBAACF,EAAA,EAAD,CACEC,UAAQ,EACRzB,SAAUiB,EACVG,MAAOlC,EAAM8B,SACbG,KAAK,WACLP,MAAM,WACNc,KAAK,aAEP,kBAACC,EAAA,EAAD,CACED,KAAK,SACL/D,UAAU,eACVH,QAAQ,YACRF,MAAM,WAJR,aCnCV,SAASsE,EAAezB,GAAQ,IACTF,EAAuBE,EAAlC0B,UAAyBC,EADN,YACe3B,EADf,eAG3B,OACoB,MATJpC,IAAOgE,MAAMjE,SAASC,QACxB,SAQc,kBAAEkC,EAAc6B,GAAa,kBAAC,IAAD,CAAUlE,GAAG,MAe3DoE,MAXf,WACI,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,kBAACN,EAAD,CAAgBC,UAAY3D,MACrD,kBAAC,IAAD,CAAO+D,KAAK,SAASC,QAAS,kBAAC,EAAD,QAC9B,kBAAC,IAAD,CAAOD,KAAK,SAASC,QAAS,kBAACN,EAAD,CAAgBC,UAAY5C,MAC1D,kBAAC,IAAD,CAAOgD,KAAK,WAAWC,QAAS,kBAACN,EAAD,CAAgBC,UAAY3B,Q,OCdzDiC,MATf,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,Q,OCJOC,qBAAWtE,SAASuE,eAAe,SAC3CC,OAAO,kBAAC,EAAD,Q","file":"static/js/main.5f05f512.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { AppBar, Toolbar, IconButton, Typography } from \"@mui/material\";\r\nimport cookie from \"cookie\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\n\r\nfunction Navigation() {\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <AppBar position=\"relative\">\r\n      <Toolbar>\r\n        <IconButton color=\"inherit\">\r\n          <MenuIcon />\r\n        </IconButton>\r\n        <Typography variant=\"h6\" style={{ flexGrow: \"1\" }}>\r\n          FakeCars.com\r\n        </Typography>\r\n        <ul className=\"nav-list\">\r\n          <li className=\"nav-list-item\">\r\n            <Link to=\"/\">Home</Link>\r\n          </li>\r\n          <li className=\"nav-list-item\">\r\n            <Link to=\"/about\">About</Link>\r\n          </li>\r\n          <li\r\n            className=\"nav-list-item\"\r\n            onClick={() => {\r\n              document.cookie = cookie.serialize(\"loggedIn\", null, {\r\n                maxAge: 0,\r\n              });\r\n              navigate(\"/login\");\r\n            }}\r\n          >\r\n            Logout\r\n          </li>\r\n        </ul>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Card, CardContent, CardActions, Divider } from '@mui/material'\r\nimport cars from '../cars.json'\r\n\r\nfunction Home() {\r\n    console.log('CARS', cars)\r\n    return (\r\n        <div className=\"card-container\">\r\n            {cars.map((car, idx) => (\r\n                <Card key={idx} className=\"card\">\r\n                    <CardContent className=\"text-gray\">\r\n                        <span>{car.Name.toUpperCase()}</span>\r\n                        <ul>\r\n                        <li>Miles_per_Gallon: {car[\"Miles_per_Gallon\"]}</li>\r\n                        <li>Cylinders: {car[\"Cylinders\"]}</li>\r\n                        <li>Displacement: {car[\"Displacement\"]}</li>\r\n                        <li>Horsepower: {car[\"Horsepower\"]}</li>\r\n                        </ul>\r\n                    </CardContent>\r\n                    <Divider />\r\n                    <CardActions style={{ color: 'mediumblue' }}>\r\n                        <Link to={`/car/${car.id}`}>See More Details</Link>\r\n                    </CardActions>\r\n                </Card>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home","import React, { Component } from \"react\";\r\nimport { Container, Divider, Switch } from \"@mui/material\";\r\n\r\nclass About extends Component {\r\n  state = {\r\n    checked: true,\r\n    heading: \"About FakeCars.com\",\r\n  };\r\n\r\n  toggleSwitch = () => {\r\n    const newVal = !this.state.checked;\r\n    if (newVal) {\r\n      return this.setState({\r\n        heading: \"About FakeCars.com\",\r\n        checked: newVal,\r\n      });\r\n    }\r\n    return this.setState({\r\n      heading: \"About Cars.com\",\r\n      checked: newVal,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"text-gray\">\r\n        <Container maxWidth=\"sm\">\r\n          <h1 style={{ textAlign: \"center\" }}>{this.state.heading}</h1>\r\n          <p>\r\n            FakeCars.com was created to solve a specific problem. That problem\r\n            is quick and reliable access to details about many different models,\r\n            all in one place. We had to use the word \"Fake\" in our name so that\r\n            we don't get sued by the real&nbsp;\r\n            <a\r\n              style={{ color: \"mediumblue\" }}\r\n              href=\"https://www.cars.com\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              Cars.com\r\n            </a>\r\n            &nbsp;but we won't worry too much about that. We've provided a link\r\n            to the actual cars.com above and we did not receive any money from\r\n            them to do so. Although, there's an argument that maybe we should\r\n            since we are a top-notch coding bootcamp and anyone would want to be\r\n            associated with us :)\r\n          </p>\r\n          <Divider />\r\n          <p>\r\n            If you'd like you can toggle the word \"Fake\" because why not? We\r\n            have the potential to be the real cars.com if we wanted to be.\r\n          </p>\r\n          <Switch\r\n            checked={this.state.checked}\r\n            color=\"primary\"\r\n            onChange={this.toggleSwitch}\r\n          />\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default About;\r\n","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Container, Paper, Chip } from \"@mui/material\";\r\nimport cars from \"../cars.json\";\r\n\r\nfunction Car(props) {\r\n  const id = useParams().id;\r\n  const car = cars.find((c) => c.id === Number(id));\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\" className=\"car-container\">\r\n      <Paper className=\"car-paper\">\r\n        <h2>{car.Name}</h2>\r\n        {Object.keys(car).map((key, idx) => {\r\n          return <Chip key={idx} label={`${key}: ${car[key]}`}></Chip>;\r\n        })}\r\n      </Paper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Car;\r\n","import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { TextField, Button, Container } from \"@mui/material\";\r\nimport cookie from 'cookie'\r\n\r\nfunction Login() {\r\n  const navigate = useNavigate();\r\n\r\n  const [state, setState] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  function handleTextChange(e) {\r\n    const { name, value } = e.target;\r\n    setState((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        [name]: value,\r\n      };\r\n    });\r\n  };\r\n\r\n  function login(e) {\r\n    e.preventDefault();\r\n    // set cookie here\r\n    // set loggedIn = true and max-age = 60*1000 (one minute)\r\n    document.cookie = cookie.serialize(\"loggedIn\", \"true\", {maxAge: 60})\r\n\r\n    navigate(\"/\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Container maxWidth=\"sm\">\r\n        <form className=\"login-form\" onSubmit={login}>\r\n          <TextField\r\n            required\r\n            onChange={handleTextChange}\r\n            value={state.username}\r\n            name=\"username\"\r\n            label=\"Username\"\r\n            type=\"text\"\r\n          />\r\n          <TextField\r\n            required\r\n            onChange={handleTextChange}\r\n            value={state.password}\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            className=\"login-button\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n          >\r\n            Login\r\n          </Button>\r\n        </form>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from 'react'\r\nimport { Routes, Route, Navigate } from 'react-router'\r\nimport cookie from 'cookie'\r\n\r\nimport Home from './components/Home'\r\nimport About from './components/About'\r\nimport Car from './components/Car'\r\nimport Login from './components/Login'\r\n\r\n// Write checkAuth function here\r\n// Check the cookies for a cookie called \"loggedIn\"\r\nfunction checkAuth() {\r\n    const cookies = cookie.parse(document.cookie)\r\n    return cookies[\"loggedIn\"] ? true : false;\r\n}\r\n\r\n// Write ProtectedRoute function here\r\nfunction ProtectedRoute(props) {\r\n    const { component: Component, ...rest } = props;\r\n\r\n    return (\r\n        checkAuth() === true ? (< Component {...rest} />) : (<Navigate to=\"/\" />)\r\n    )\r\n}\r\n\r\nfunction Router() {\r\n    return (\r\n        <Routes>\r\n            <Route path=\"/\" element={<ProtectedRoute component={ Home } />} />\r\n            <Route path=\"/login\" element={<Login />} />\r\n            <Route path=\"/about\" element={<ProtectedRoute component={ About } />} />\r\n            <Route path=\"/car/:id\" element={<ProtectedRoute component={ Car } />} />\r\n        </Routes>\r\n    );\r\n};\r\n\r\nexport default Router;","import React from \"react\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nimport Navigation from \"./components/Navigation\";\r\nimport Router from \"./Router\";\r\n\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Navigation />\r\n      <Router />\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\n// import * as serviceWorker from \"./serviceWorker\";\r\nimport { createRoot } from \"react-dom/client\";\r\n\r\nimport App from \"./App\";\r\n\r\nimport \"./index.css\";\r\n\r\nconst root = createRoot(document.getElementById(\"root\"));\r\nroot.render(<App />);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n// serviceWorker.unregister();\r\n"],"sourceRoot":""}